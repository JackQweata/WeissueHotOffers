import telebot
from decouple import config
from telebot import types
from ast import literal_eval
from src.WB.module.parser_management import ParserManagementWB
from src.WB.run_parser import start_parse
from utils.run_threading import start_threading


def commands():
    bot = telebot.TeleBot(config("TOKEN_BOT_DEVELOPER"))
    admin_id = literal_eval(config("CHAT_ADMIN_ID"))
    management = ParserManagementWB()

    @bot.message_handler(commands=['start'])
    def start_admin_bot(message):

        if message.chat.id not in admin_id:
            return bot.send_message(message.chat.id, '–ù–µ—Ç –ø—Ä–∞–≤')

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        stop_parse_bt = types.KeyboardButton('üìõ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä—Å–µ—Ä')
        start_parse_bt = types.KeyboardButton('üíπ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–µ—Ä')
        markup.add(stop_parse_bt, start_parse_bt)
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç', reply_markup=markup)

    @bot.message_handler(content_types=['text'])
    def commands_admin(message):

        if message.chat.id not in admin_id:
            return bot.send_message(message.chat.id, '–ù–µ—Ç –ø—Ä–∞–≤')

        if message.text == 'üìõ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä—Å–µ—Ä':

            if not management.get_stop_parse():
                return bot.send_message(message.chat.id, f'–£–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

            management.set_stop_parse(False)
            bot.send_message(message.chat.id, f'–í—Å–µ –ø–∞—Ä—Å–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')

        elif message.text == 'üíπ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–µ—Ä':

            if management.get_stop_parse():
                return bot.send_message(message.chat.id, f'–£–∂–µ –∑–∞–ø—É—â–µ–Ω')

            management.set_stop_parse(True)

            start_threading([
                {"target": start_parse, "args": ((config("WB_URL_WOMAN_CLOTHES")), ("woman"),)},
                {"target": start_parse, "args": ((config("WB_URL_MEN_CLOTHES")), ("men"),)},
                {"target": start_parse, "args": ((config("WB_URL_CHILDREN_CLOTHES")), ("children"),)}
            ])

            bot.send_message(message.chat.id, f'–ó–∞–ø—É—â–µ–Ω–æ')

        else:
            bot.send_message(message.chat.id, '–ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã')

    bot.polling(none_stop=True)
